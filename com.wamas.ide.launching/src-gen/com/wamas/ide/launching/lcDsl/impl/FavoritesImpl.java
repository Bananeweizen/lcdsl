/**
 * generated by Xtext 2.10.0
 */
package com.wamas.ide.launching.lcDsl.impl;

import com.wamas.ide.launching.lcDsl.Favorites;
import com.wamas.ide.launching.lcDsl.LcDslPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Favorites</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link com.wamas.ide.launching.lcDsl.impl.FavoritesImpl#isRun <em>Run</em>}</li>
 *   <li>{@link com.wamas.ide.launching.lcDsl.impl.FavoritesImpl#isDebug <em>Debug</em>}</li>
 * </ul>
 *
 * @generated
 */
public class FavoritesImpl extends MinimalEObjectImpl.Container implements Favorites
{
  /**
   * The default value of the '{@link #isRun() <em>Run</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRun()
   * @generated
   * @ordered
   */
  protected static final boolean RUN_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isRun() <em>Run</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isRun()
   * @generated
   * @ordered
   */
  protected boolean run = RUN_EDEFAULT;

  /**
   * The default value of the '{@link #isDebug() <em>Debug</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDebug()
   * @generated
   * @ordered
   */
  protected static final boolean DEBUG_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDebug() <em>Debug</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDebug()
   * @generated
   * @ordered
   */
  protected boolean debug = DEBUG_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected FavoritesImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return LcDslPackage.Literals.FAVORITES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isRun()
  {
    return run;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setRun(boolean newRun)
  {
    boolean oldRun = run;
    run = newRun;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LcDslPackage.FAVORITES__RUN, oldRun, run));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public boolean isDebug()
  {
    return debug;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setDebug(boolean newDebug)
  {
    boolean oldDebug = debug;
    debug = newDebug;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, LcDslPackage.FAVORITES__DEBUG, oldDebug, debug));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case LcDslPackage.FAVORITES__RUN:
        return isRun();
      case LcDslPackage.FAVORITES__DEBUG:
        return isDebug();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case LcDslPackage.FAVORITES__RUN:
        setRun((Boolean)newValue);
        return;
      case LcDslPackage.FAVORITES__DEBUG:
        setDebug((Boolean)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case LcDslPackage.FAVORITES__RUN:
        setRun(RUN_EDEFAULT);
        return;
      case LcDslPackage.FAVORITES__DEBUG:
        setDebug(DEBUG_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case LcDslPackage.FAVORITES__RUN:
        return run != RUN_EDEFAULT;
      case LcDslPackage.FAVORITES__DEBUG:
        return debug != DEBUG_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (run: ");
    result.append(run);
    result.append(", debug: ");
    result.append(debug);
    result.append(')');
    return result.toString();
  }

} //FavoritesImpl
